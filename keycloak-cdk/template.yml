Description: (SO8021) - Deploy keycloak on AWS with cdk-keycloak construct library
Resources:
  KeyCloakKCSecretF8498E5C:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        PasswordLength: 12
        SecretStringTemplate: '{"username":"keycloak"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KCSecret/Resource
  KeyCloakDatabaseDBInstanceSubnetGroup71BF616F:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for DBInstance database
      SubnetIds:
        - subnet-0810520d4bea9d35e
        - subnet-04269d245607d50bd
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/Database/DBInstance/SubnetGroup/Default
  KeyCloakDatabaseDBInstanceSecurityGroupC897947D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for DBInstance database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 10.100.0.0/16
          Description: from 10.100.0.0/16:3306
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
      VpcId: vpc-08587259374864b8f
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/Database/DBInstance/SecurityGroup/Resource
  KeyCloakDatabaseDBInstanceSecurityGroupfromKeycloakCdkStackKeyCloakDatabaseDBInstanceSecurityGroup7D99DC7D3306244AF1D0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from KeycloakCdkStackKeyCloakDatabaseDBInstanceSecurityGroup7D99DC7D:3306
      FromPort: 3306
      GroupId:
        Fn::GetAtt:
          - KeyCloakDatabaseDBInstanceSecurityGroupC897947D
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KeyCloakDatabaseDBInstanceSecurityGroupC897947D
          - GroupId
      ToPort: 3306
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/Database/DBInstance/SecurityGroup/from KeycloakCdkStackKeyCloakDatabaseDBInstanceSecurityGroup7D99DC7D:3306
  KeyCloakDatabaseDBInstanceSecurityGroupfromKeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264AIndirectPort68B88FF4:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from KeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - KeyCloakDatabaseDBInstance629EDCFB
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - KeyCloakDatabaseDBInstanceSecurityGroupC897947D
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
          - GroupId
      ToPort:
        Fn::GetAtt:
          - KeyCloakDatabaseDBInstance629EDCFB
          - Endpoint.Port
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/Database/DBInstance/SecurityGroup/from KeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A:{IndirectPort}
  KeycloakCdkStackKeyCloakDatabaseDBInstanceSecretA26C00A13fdaad7efa858a3daf9490cf0a702aeb:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/Database/DBInstance/Secret/Resource
  KeyCloakDatabaseDBInstanceSecretAttachment0508FD7E:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: KeycloakCdkStackKeyCloakDatabaseDBInstanceSecretA26C00A13fdaad7efa858a3daf9490cf0a702aeb
      TargetId:
        Ref: KeyCloakDatabaseDBInstance629EDCFB
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/Database/DBInstance/Secret/Attachment/Resource
  KeyCloakDatabaseDBInstance629EDCFB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: "100"
      BackupRetentionPeriod: 7
      CopyTagsToSnapshot: true
      DBInstanceClass: db.r5.large
      DBName: keycloak
      DBParameterGroupName: default.mysql8.0
      DBSubnetGroupName:
        Ref: KeyCloakDatabaseDBInstanceSubnetGroup71BF616F
      DeletionProtection: true
      Engine: mysql
      EngineVersion: 8.0.33
      MasterUsername: admin
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: KeycloakCdkStackKeyCloakDatabaseDBInstanceSecretA26C00A13fdaad7efa858a3daf9490cf0a702aeb
            - :SecretString:password::}}
      PubliclyAccessible: false
      StorageEncrypted: true
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - KeyCloakDatabaseDBInstanceSecurityGroupC897947D
            - GroupId
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/Database/DBInstance/Resource
  KeyCloakKeyCloakContainerSerivcekeycloaks3pingA0B30CB4:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/keycloak_s3_ping/Resource
  KeyCloakKeyCloakContainerSerivceClusterA18E44FF:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    DependsOn:
      - KeyCloakDatabaseDBInstance629EDCFB
      - KeyCloakDatabaseDBInstanceSecretAttachment0508FD7E
      - KeycloakCdkStackKeyCloakDatabaseDBInstanceSecretA26C00A13fdaad7efa858a3daf9490cf0a702aeb
      - KeyCloakDatabaseDBInstanceSecurityGroupfromKeycloakCdkStackKeyCloakDatabaseDBInstanceSecurityGroup7D99DC7D3306244AF1D0
      - KeyCloakDatabaseDBInstanceSecurityGroupfromKeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264AIndirectPort68B88FF4
      - KeyCloakDatabaseDBInstanceSecurityGroupC897947D
      - KeyCloakDatabaseDBInstanceSubnetGroup71BF616F
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/Cluster/Resource
  KeyCloakKeyCloakContainerSerivceTaskRole0658CED2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
                - ecs.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/TaskRole/Resource
  KeyCloakKeyCloakContainerSerivceTaskRoleDefaultPolicyA2321E87:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - KeyCloakKeyCloakContainerSerivceLogGroup010F2AAE
                - Arn
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: KeyCloakDatabaseDBInstanceSecretAttachment0508FD7E
              - Ref: KeyCloakKCSecretF8498E5C
        Version: "2012-10-17"
      PolicyName: KeyCloakKeyCloakContainerSerivceTaskRoleDefaultPolicyA2321E87
      Roles:
        - Ref: KeyCloakKeyCloakContainerSerivceTaskRole0658CED2
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/TaskRole/DefaultPolicy/Resource
  KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/TaskDef/TaskRole/Resource
  KeyCloakKeyCloakContainerSerivceTaskDefTaskRoleDefaultPolicyE26BE579:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - KeyCloakKeyCloakContainerSerivcekeycloaks3pingA0B30CB4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - KeyCloakKeyCloakContainerSerivcekeycloaks3pingA0B30CB4
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: KeyCloakKeyCloakContainerSerivceTaskDefTaskRoleDefaultPolicyE26BE579
      Roles:
        - Ref: KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/TaskDef/TaskRole/DefaultPolicy/Resource
  KeyCloakKeyCloakContainerSerivceTaskDef30C9533A:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - start
            - --optimized
          Environment:
            - Name: JAVA_OPTS_APPEND
              Value:
                Fn::Join:
                  - ""
                  - - -Djgroups.s3.region_name=us-east-1 -Djgroups.s3.bucket_name=
                    - Ref: KeyCloakKeyCloakContainerSerivcekeycloaks3pingA0B30CB4
            - Name: KC_CACHE_STACK
              Value: ec2
            - Name: KC_DB
              Value: mysql
            - Name: KC_DB_URL_DATABASE
              Value: keycloak
            - Name: KC_DB_URL_HOST
              Value:
                Fn::GetAtt:
                  - KeyCloakDatabaseDBInstance629EDCFB
                  - Endpoint.Address
            - Name: KC_DB_URL_PORT
              Value: "3306"
            - Name: KC_DB_USERNAME
              Value: admin
            - Name: KC_HOSTNAME
              Value: auth.loyaltywall.com
            - Name: KC_HOSTNAME_STRICT_BACKCHANNEL
              Value: "true"
            - Name: KC_PROXY
              Value: edge
          Essential: true
          Image: quay.io/keycloak/keycloak:20.0.5
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: KeyCloakKeyCloakContainerSerivceLogGroup010F2AAE
              awslogs-stream-prefix: keycloak
              awslogs-region: us-east-1
          Name: keycloak
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
            - ContainerPort: 7800
              Protocol: tcp
            - ContainerPort: 57800
              Protocol: tcp
          Secrets:
            - Name: KC_DB_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: KeyCloakDatabaseDBInstanceSecretAttachment0508FD7E
                    - ":password::"
            - Name: KEYCLOAK_ADMIN
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: KeyCloakKCSecretF8498E5C
                    - ":username::"
            - Name: KEYCLOAK_ADMIN_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: KeyCloakKCSecretF8498E5C
                    - ":password::"
      Cpu: "4096"
      ExecutionRoleArn:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceTaskRole0658CED2
          - Arn
      Family: KeycloakCdkStackKeyCloakKeyCloakContainerSerivceTaskDefBC4051A0
      Memory: "8192"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418
          - Arn
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/TaskDef/Resource
  KeyCloakKeyCloakContainerSerivceLogGroup010F2AAE:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/LogGroup/Resource
  KeyCloakKeyCloakContainerSerivceService79D3F427:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: KeyCloakKeyCloakContainerSerivceClusterA18E44FF
      DeploymentConfiguration:
        Alarms:
          AlarmNames: []
          Enable: false
          Rollback: false
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 120
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: keycloak
          ContainerPort: 8080
          TargetGroupArn:
            Ref: KeyCloakKeyCloakContainerSerivceALBHttpsListenerECSTargetGroupCE3EF52C
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
                - GroupId
          Subnets:
            - subnet-0810520d4bea9d35e
            - subnet-04269d245607d50bd
      TaskDefinition:
        Ref: KeyCloakKeyCloakContainerSerivceTaskDef30C9533A
    DependsOn:
      - KeyCloakKeyCloakContainerSerivceALBHttpsListenerECSTargetGroupCE3EF52C
      - KeyCloakKeyCloakContainerSerivceALBHttpsListener140F85B9
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRoleDefaultPolicyE26BE579
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/Service/Service
  KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId: vpc-08587259374864b8f
    DependsOn:
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRoleDefaultPolicyE26BE579
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/Service/SecurityGroup/Resource
  KeyCloakKeyCloakContainerSerivceServiceSecurityGroupfromKeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A7800364E41C4:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: kc jgroups-tcp
      FromPort: 7800
      GroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
          - GroupId
      ToPort: 7800
    DependsOn:
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRoleDefaultPolicyE26BE579
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/Service/SecurityGroup/from KeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A:7800
  KeyCloakKeyCloakContainerSerivceServiceSecurityGroupfromKeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A57800D8C128F0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: kc jgroups-tcp-fd
      FromPort: 57800
      GroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
          - GroupId
      ToPort: 57800
    DependsOn:
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRoleDefaultPolicyE26BE579
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/Service/SecurityGroup/from KeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A:57800
  KeyCloakKeyCloakContainerSerivceServiceSecurityGroupfromKeycloakCdkStackKeyCloakKeyCloakContainerSerivceALBSecurityGroupB0738D448080D58BB8CB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceALBSecurityGroup8F5103C6
          - GroupId
      ToPort: 8080
    DependsOn:
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRoleDefaultPolicyE26BE579
      - KeyCloakKeyCloakContainerSerivceTaskDefTaskRole0DC4D418
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/Service/SecurityGroup/from KeycloakCdkStackKeyCloakKeyCloakContainerSerivceALBSecurityGroupB0738D44:8080
  KeyCloakKeyCloakContainerSerivceALBE100B67D:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - KeyCloakKeyCloakContainerSerivceALBSecurityGroup8F5103C6
            - GroupId
      Subnets:
        - subnet-08372e4148e6c8677
        - subnet-0a30f1878e27748e5
      Type: application
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/ALB/Resource
  KeyCloakKeyCloakContainerSerivceALBSecurityGroup8F5103C6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB KeycloakCdkStackKeyCloakKeyCloakContainerSerivceALB1064F8D3
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId: vpc-08587259374864b8f
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/ALB/SecurityGroup/Resource
  KeyCloakKeyCloakContainerSerivceALBSecurityGrouptoKeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A808087CF3AFB:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceALBSecurityGroup8F5103C6
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - KeyCloakKeyCloakContainerSerivceServiceSecurityGroup4C80023D
          - GroupId
      FromPort: 8080
      ToPort: 8080
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/ALB/SecurityGroup/to KeycloakCdkStackKeyCloakKeyCloakContainerSerivceServiceSecurityGroup8640264A:8080
  KeyCloakKeyCloakContainerSerivceALBHttpsListener140F85B9:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: KeyCloakKeyCloakContainerSerivceALBHttpsListenerECSTargetGroupCE3EF52C
          Type: forward
      LoadBalancerArn:
        Ref: KeyCloakKeyCloakContainerSerivceALBE100B67D
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:230071806171:certificate/bd49e4e9-508f-4e83-a094-4a9bd90e4858
      Port: 443
      Protocol: HTTPS
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/ALB/HttpsListener/Resource
  KeyCloakKeyCloakContainerSerivceALBHttpsListenerECSTargetGroupCE3EF52C:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthyThresholdCount: 3
      Port: 8080
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: slow_start.duration_seconds
          Value: "60"
        - Key: stickiness.enabled
          Value: "true"
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: "86400"
      TargetType: ip
      VpcId: vpc-08587259374864b8f
    Metadata:
      aws:cdk:path: KeycloakCdkStack/KeyCloak/KeyCloakContainerSerivce/ALB/HttpsListener/ECSTargetGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STW/CMAz9LdxDxuCwXSndJiSkTcB9MqnXmaZJlQ8mVOW/L00p65i0k5+fn+Nnt3P++MBnE/iyU1FUU0kH3u4ciIpt0WpvBLJYe28tCoPO1qCgRBM1KWerD3VBfdiDKdEtXXzhs0Y1EtxWAjOF5W0ODg5gca2sAxWn7fxBoXsx2jddc56NiUH9Mz3Phs7AUMyTMW/Ina8v/E+sVWnQ2j/8U6IDswveZl5U/bQedZOi9ZX01qHp+AE+xyXB4R5sleMHKXKkVSe4ZbRyQArNiLv07tCcKN4hGUowMIKat1stE5vim5Ykzl3ao8CkLqOnjS6vew442pVgHQmpoTiAjMciVZ7irZZNE5uhG7+JtSzV+o1+5WMdxUXVRTPgUb3/zFcPozSEjnj1rvHplsP/FZjSBfKjvTvNZ3zB7ydHSzQ1XjmqkW/7+A1BpA+PqAIAAA==
    Metadata:
      aws:cdk:path: KeycloakCdkStack/CDKMetadata/Default
Outputs:
  KeyCloakDatabaseDBSecretArn28BEB641:
    Value:
      Ref: KeyCloakDatabaseDBInstanceSecretAttachment0508FD7E
  KeyCloakDatabaseclusterEndpointHostname38FB0D1E:
    Value:
      Fn::GetAtt:
        - KeyCloakDatabaseDBInstance629EDCFB
        - Endpoint.Address
  KeyCloakDatabaseclusterIdentifierF00C290B:
    Value:
      Ref: KeyCloakDatabaseDBInstance629EDCFB
  KeyCloakKeyCloakContainerSerivceEndpointURL9C81E19A:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - KeyCloakKeyCloakContainerSerivceALBE100B67D
              - DNSName
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

